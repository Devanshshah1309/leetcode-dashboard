Difficulty,Title,Frequency,Acceptance Rate,Link,Topics
MEDIUM,Random Pick with Weight,100.0,0.48091689603733784,https://leetcode.com/problems/random-pick-with-weight,"Array, Math, Binary Search, Prefix Sum, Randomized"
EASY,Destination City,86.5,0.7948579336591273,https://leetcode.com/problems/destination-city,"Array, Hash Table, String"
MEDIUM,Course Schedule,86.5,0.48346027936495184,https://leetcode.com/problems/course-schedule,"Depth-First Search, Breadth-First Search, Graph, Topological Sort"
EASY,Minimum String Length After Removing Substrings,75.9,0.7750036824274562,https://leetcode.com/problems/minimum-string-length-after-removing-substrings,"String, Stack, Simulation"
MEDIUM,Letter Case Permutation,75.9,0.7473269646262363,https://leetcode.com/problems/letter-case-permutation,"String, Backtracking, Bit Manipulation"
HARD,Word Ladder II,75.9,0.27112609952189043,https://leetcode.com/problems/word-ladder-ii,"Hash Table, String, Backtracking, Breadth-First Search"
HARD,Insert Delete GetRandom O(1) - Duplicates allowed,75.9,0.35777757223973056,https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed,"Array, Hash Table, Math, Design, Randomized"
MEDIUM,Insert Delete GetRandom O(1),75.9,0.548643030929135,https://leetcode.com/problems/insert-delete-getrandom-o1,"Array, Hash Table, Math, Design, Randomized"
MEDIUM,String Compression,75.9,0.5707264422154562,https://leetcode.com/problems/string-compression,"Two Pointers, String"
MEDIUM,Merge Intervals,75.9,0.4869514067443557,https://leetcode.com/problems/merge-intervals,"Array, Sorting"
MEDIUM,Top K Frequent Words,75.9,0.5884877679481778,https://leetcode.com/problems/top-k-frequent-words,"Array, Hash Table, String, Trie, Sorting, Heap (Priority Queue), Bucket Sort, Counting"
HARD,Find the Closest Palindrome,75.9,0.31595660159972205,https://leetcode.com/problems/find-the-closest-palindrome,"Math, String"
EASY,Valid Anagram,75.9,0.6604132102749246,https://leetcode.com/problems/valid-anagram,"Hash Table, String, Sorting"
MEDIUM,Group Anagrams,75.9,0.7021297798923887,https://leetcode.com/problems/group-anagrams,"Array, Hash Table, String, Sorting"
MEDIUM,"Filter Restaurants by Vegan-Friendly, Price and Distance",75.9,0.6302950819672131,https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance,"Array, Sorting"
MEDIUM,Top K Frequent Elements,75.9,0.6397498150758127,https://leetcode.com/problems/top-k-frequent-elements,"Array, Hash Table, Divide and Conquer, Sorting, Heap (Priority Queue), Bucket Sort, Counting, Quickselect"
EASY,Check If a Word Occurs As a Prefix of Any Word in a Sentence,75.9,0.6889664795488596,https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence,"Two Pointers, String, String Matching"
HARD,The Skyline Problem,75.9,0.4355320114012443,https://leetcode.com/problems/the-skyline-problem,"Array, Divide and Conquer, Binary Indexed Tree, Segment Tree, Line Sweep, Heap (Priority Queue), Ordered Set"
EASY,Minimum Index Sum of Two Lists,75.9,0.5727402899978423,https://leetcode.com/problems/minimum-index-sum-of-two-lists,"Array, Hash Table, String"
MEDIUM,Reverse Words in a String,75.9,0.49592139098050825,https://leetcode.com/problems/reverse-words-in-a-string,"Two Pointers, String"
EASY,Reverse Linked List,75.9,0.7852426572491054,https://leetcode.com/problems/reverse-linked-list,"Linked List, Recursion"
EASY,Longest Common Prefix,75.9,0.44745648784786707,https://leetcode.com/problems/longest-common-prefix,"String, Trie"
MEDIUM,Decode String,75.9,0.605751188768724,https://leetcode.com/problems/decode-string,"String, Stack, Recursion"
MEDIUM,Active Businesses,75.9,0.6583693444388402,https://leetcode.com/problems/active-businesses,Database
MEDIUM,Longest Substring Without Repeating Characters,75.9,0.36201700695130223,https://leetcode.com/problems/longest-substring-without-repeating-characters,"Hash Table, String, Sliding Window"
EASY,Two Sum,75.9,0.5490437346425321,https://leetcode.com/problems/two-sum,"Array, Hash Table"
HARD,Word Ladder,75.9,0.41655686250187224,https://leetcode.com/problems/word-ladder,"Hash Table, String, Breadth-First Search"
